// scripts/comprehensive-poll-test.ts\n// Comprehensive test for Poll API integration\n\nimport { domaApi } from '../src/lib/domaApi'\nimport { DomaPollService } from '../src/lib/domaPollService'\n\nasync function runComprehensiveTest() {\n  console.log('üîç Running comprehensive Doma Poll API test...')\n  \n  try {\n    // Test 1: Basic polling\n    console.log('\\n=== Test 1: Basic Polling ===')\n    const events = await domaApi.pollEvents(['NAME_TOKENIZED'], 3, true)\n    console.log(`‚úÖ Found ${events.events?.length || 0} events`)\n    \n    // Test 2: Enhanced polling with types\n    console.log('\\n=== Test 2: Enhanced Polling with Types ===')\n    const typedEvents = await domaApi.pollEventsWithTypes(['NAME_CLAIMED'], 2, true)\n    console.log(`‚úÖ Found ${typedEvents.events?.length || 0} typed events`)\n    \n    // Test 3: Event acknowledgment\n    console.log('\\n=== Test 3: Event Acknowledgment ===')\n    if (typedEvents.events && typedEvents.events.length > 0) {\n      const eventId = typedEvents.events[0].id\n      const ackResult = await domaApi.acknowledgeEventWithResponse(eventId)\n      console.log(`‚úÖ Acknowledged event ${eventId}:`, ackResult)\n    }\n    \n    // Test 4: Reset polling\n    console.log('\\n=== Test 4: Reset Polling ===')\n    const resetResult = await domaApi.resetPollingWithResponse(0)\n    console.log('‚úÖ Reset polling result:', resetResult)\n    \n    // Test 5: DomaPollService\n    console.log('\\n=== Test 5: DomaPollService ===')\n    const pollService = new DomaPollService()\n    console.log('‚úÖ DomaPollService instantiated')\n    console.log(`   Last processed event ID: ${pollService.getLastProcessedEventId()}`)\n    \n    console.log('\\nüéâ All tests completed successfully!')\n    \n  } catch (error: any) {\n    console.error('‚ùå Error during comprehensive test:', error.message)\n    console.error('Stack trace:', error.stack)\n  }\n}\n\nrunComprehensiveTest()