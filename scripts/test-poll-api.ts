// scripts/test-poll-api.ts\n// Test script for Poll API integration\n\nasync function testPollAPI() {\n  console.log('🔍 Testing Doma Poll API Integration...')\n  \n  try {\n    // Dynamically import the Doma API client\n    const domaApiModule = await import('../src/lib/domaApi')\n    const { domaApi } = domaApiModule\n    \n    // Test polling events\n    console.log('\\n🧪 Testing pollEvents method...')\n    const events = await domaApi.pollEvents(['NAME_TOKENIZED', 'NAME_CLAIMED'], 5, true)\n    console.log('✅ pollEvents successful')\n    console.log(`   Found ${events.events?.length || 0} events`)\n    \n    if (events.events && events.events.length > 0) {\n      console.log('   Sample events:')\n      events.events.slice(0, 3).forEach((event: any, index: number) => {\n        console.log(`     ${index + 1}. ${event.type || 'Unknown'} - ID: ${event.id}`)\n      })\n      \n      // Test acknowledging the last event\n      console.log('\\n🧪 Testing acknowledgeEvent method...')\n      const lastEventId = events.events[events.events.length - 1].id\n      const ackResult = await domaApi.acknowledgeEvent(lastEventId)\n      console.log('✅ acknowledgeEvent successful')\n      console.log(`   Acknowledged event ID: ${lastEventId}`)\n      console.log(`   Response:`, ackResult)\n    }\n    \n    // Test resetting polling (this requires EVENTS permission)\n    console.log('\\n🧪 Testing resetPolling method...')\n    try {\n      const resetResult = await domaApi.resetPolling(0)\n      console.log('✅ resetPolling successful')\n      console.log(`   Response:`, resetResult)\n    } catch (error: any) {\n      console.log('⚠️  resetPolling failed (might be expected due to permissions)')\n      console.log(`   Error: ${error.message}`)\n    }\n    \n    console.log('\\n🎉 All Poll API tests completed!')\n    \n  } catch (error: any) {\n    console.error('❌ Error testing Poll API:', error.message)\n    console.error('Stack trace:', error.stack)\n  }\n}\n\ntestPollAPI()